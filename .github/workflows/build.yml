name: Build and upload native binaries
on:
  push:
    tags: ['v*']
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install dependencies
        run: go mod download

      - name: Test
        run: go test ./...

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          set -e
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            ext=".exe"
          else
            ext=""
          fi
          out="dist/fixembed-${{ matrix.os }}-${{ matrix.arch }}${ext}"
          echo "Building $out"
          go build -o "$out" ./...

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fixembed-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/fixembed-${{ matrix.os }}-${{ matrix.arch }}*